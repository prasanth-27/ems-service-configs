spring.application.name=bookingmanagementsystem_TicketManager

server.port=9013
logging.level.com.prasanth.training.ems=debug

#Database Properties
# Database connection
spring.datasource.url=jdbc:mysql://localhost:3306/bms_tickets
spring.datasource.username=ticketmanager_sa
spring.datasource.password=sai92992
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA & Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#eureka client properties
eureka.client.serviceUrl.defaultZone=http://localhost:9001/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# otlp properties
# Zipkin tracing export
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans


# Micrometer Prometheus metrics
management.endpoints.web.exposure.include=health,info,prometheus
management.prometheus.metrics.export.enabled=true

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=bookingmanagementsystem_ticketmanager
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
